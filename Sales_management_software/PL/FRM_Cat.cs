using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Sales_management_software.EPL;
using DevExpress.Utils.Extensions;
using Sales_management_software.DB;

namespace Sales_management_software.PL
{
    public partial class FRM_Cat : Form
    {
        DB_SMPEntities db = new DB_SMPEntities();
        TB_CAT tb_cat=new TB_CAT();
        BL.Methods methods = new BL.Methods(); 
        int id;
        public FRM_Cat()
        {

            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Sales_management_software.DB.DB_SMPEntities dbContext = new Sales_management_software.DB.DB_SMPEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_CAT.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.TB_CAT.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        //ADD
        private void btn_add_Click(object sender, EventArgs e)
        {
            PL.FRM_CAT_ADD fRM_add= new PL.FRM_CAT_ADD();
            fRM_add.id = 0;
            fRM_add.btn_add.Text = "add";
            fRM_add.Show();
            
        }
        // Update
        private void btn_update_Click(object sender, EventArgs e)
        {
            Update_data();


        }
        // delete
        private void btn_delete_Click(object sender, EventArgs e)
        {
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            try
            {
                id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
                var rs = MessageBox.Show("delete", "are you sure?", MessageBoxButtons.YesNo);

                if (rs == DialogResult.Yes)
                {
                    tb_cat = db.TB_CAT.Where(X => X.ID == id).FirstOrDefault();
                    db.Entry(tb_cat).State = EntityState.Deleted;
                    db.SaveChanges();
                    toast.txt_caption.Text = "category delete";
                    toast.Show();
                    Update_data();
                }
            }
            catch {
                dialog.txt_caption.Text = "no category ";
                dialog.Width = this.Width;
                dialog.Show();
            }
           
           



        }


        private void Update_data()
        {
            db = new DB_SMPEntities();
            gridControl1.DataSource = db.TB_CAT.ToList();
        }
        // edit
        private void btn_edit_Click(object sender, EventArgs e)
        {
            PL.FRM_CAT_ADD fRM_add = new PL.FRM_CAT_ADD();
            id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
            tb_cat = db.TB_CAT.Where(X => X.ID == id).FirstOrDefault();
            fRM_add.edt_name.Text = tb_cat.CAT_Name.ToString();
            methods.by = tb_cat.CAT_Cover;
            fRM_add.pic_cover.Image = Image.FromStream(methods.convert_image());
            fRM_add.id = id;
            fRM_add.btn_add.Text = "edit";
            fRM_add.Show();
        }
        // search
        private void btn_search_Click(object sender, EventArgs e)
        {
            var _search=edt_search.Text;
            gridControl1.DataSource=db.TB_CAT.Where(x=>x.CAT_Name.Contains(_search)).ToList();
        }

        private void FRM_Cat_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dB_SMPDataSet.TB_CAT' table. You can move, or remove it, as needed.
          

        }
    }
}
